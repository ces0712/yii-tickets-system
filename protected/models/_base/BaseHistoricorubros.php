<?php

/**
 * This is the model base class for the table "historicorubros".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Historicorubros".
 *
 * Columns in table "historicorubros" available as properties of the model,
 * followed by relations of table "historicorubros" available as properties of the model.
 *
 * @property integer $id
 * @property boolean $estatus
 * @property integer $cedula
 * @property integer $estado_flujo
 * @property string $tiempo
 * @property integer $id_jornada
 *
 * @property Estados $estadoFlujo
 * @property Jornada $idJornada
 */
abstract class BaseHistoricorubros extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'historicorubros';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Historicorubros|Historicorubroses', $n);
	}

	public static function representingColumn() {
		return 'tiempo';
	}

	public function rules() {
		return array(
			array('cedula, tiempo, id_jornada', 'required'),
			array('cedula, estado_flujo, id_jornada', 'numerical', 'integerOnly'=>true),
			array('estatus', 'safe'),
			array('estatus, estado_flujo', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, estatus, cedula, estado_flujo, tiempo, id_jornada', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'estadoFlujo' => array(self::BELONGS_TO, 'Estados', 'estado_flujo'),
			'idJornada' => array(self::BELONGS_TO, 'Jornada', 'id_jornada'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'estatus' => Yii::t('app', 'Estatus'),
			'cedula' => Yii::t('app', 'Cedula'),
			'estado_flujo' => null,
			'tiempo' => Yii::t('app', 'Tiempo'),
			'id_jornada' => null,
			'estadoFlujo' => null,
			'idJornada' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('estatus', $this->estatus);
		$criteria->compare('cedula', $this->cedula);
		$criteria->compare('estado_flujo', $this->estado_flujo);
		$criteria->compare('tiempo', $this->tiempo, true);
		$criteria->compare('id_jornada', $this->id_jornada);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}