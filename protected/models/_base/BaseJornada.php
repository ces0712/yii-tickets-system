<?php

/**
 * This is the model base class for the table "jornada".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Jornada".
 *
 * Columns in table "jornada" available as properties of the model,
 * followed by relations of table "jornada" available as properties of the model.
 *
 * @property integer $id
 * @property boolean $estatus
 * @property string $nombre
 * @property string $fecha_creacion
 * @property double $monto_estimado
 * @property integer $id_rubro
 *
 * @property Historicorubros[] $historicorubroses
 * @property Jornadarubro[] $jornadarubros
 * @property Rubros $idRubro
 * @property Tickets[] $tickets
 */
abstract class BaseJornada extends GxActiveRecord {
	public $ids_rubro = array();
	public $ids;
	public $monto;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'jornada';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Jornada|Jornadas', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('nombre, ids_rubro', 'required'),
			array('nombre', 'unique', 'message' => "Este nombre ya existe"),
			array('id_rubro', 'numerical', 'integerOnly'=>true),
			array('ids_rubro', 'type', 'type' => 'array'),
			array('monto_estimado', 'numerical'),
			array('estatus, fecha_creacion', 'safe'),
			array('estatus, fecha_creacion, monto_estimado', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, estatus, nombre, fecha_creacion, monto_estimado, id_rubro', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'historicorubroses' => array(self::HAS_MANY, 'Historicorubros', 'id_jornada'),
			'jornadarubros' => array(self::HAS_MANY, 'Jornadarubro', 'id_jornada'),
			'idRubro' => array(self::BELONGS_TO, 'Rubros', 'id_rubro'),
			'tickets' => array(self::HAS_MANY, 'Tickets', 'id_jornada'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'estatus' => Yii::t('app', 'Estatus'),
			'nombre' => Yii::t('app', 'Nombre'),
			'fecha_creacion' => Yii::t('app', 'Fecha Creacion'),
			'monto_estimado' => Yii::t('app', 'Monto Estimado'),
			'ids_rubro' => Yii::t('app', 'Rubros'),
			'id_rubro' => null,
			'historicorubroses' => null,
			'jornadarubros' => null,
			'idRubro' => null,
			'tickets' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('estatus', $this->estatus);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('fecha_creacion', $this->fecha_creacion, true);
		$criteria->compare('monto_estimado', $this->monto_estimado);
		$criteria->compare('id_rubro', $this->id_rubro);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}

	public function searchJornadaRubro() {
                $criteria = new CDbCriteria;

                // $criteria->compare('id', $this->id);
                $criteria->compare('estatus', $this->estatus);
                $criteria->compare('nombre', $this->nombre, true);
                $criteria->compare('monto', $this->monto, true);
		$criteria->select='array_agg(id) as ids, nombre, avg(monto_estimado) as monto';
                // $criteria->compare('fecha_creacion', $this->fecha_creacion, true);
                // $criteria->compare('monto_estimado', $this->monto_estimado);
                // $criteria->compare('id_rubro', $this->id_rubro);
		$criteria->group='nombre';
                return new CActiveDataProvider($this, array(
                        'criteria' => $criteria,
                ));
        }

}
