<?php

/**
 * This is the model base class for the table "transferencia_vocero".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TransferenciaVocero".
 *
 * Columns in table "transferencia_vocero" available as properties of the model,
 * followed by relations of table "transferencia_vocero" available as properties of the model.
 *
 * @property integer $id
 * @property integer $id_vocero_emisor
 * @property integer $id_vocero_receptor
 * @property string $referencia_bancaria
 * @property integer $id_banco
 * @property integer $id_estado
 * @property string $fecha_creacion
 * @property integer $id_jornada
 * @property double $monto_transferido
 * @property integer $id_depositante
 *
 * @property Vocero $idVoceroReceptor
 * @property Vocero $idVoceroEmisor
 * @property Bancos $idBanco
 * @property Estados $idEstado
 * @property Jornada $idJornada
 * @property Depositante $idDepositante
 */
abstract class BaseTransferenciaVocero extends GxActiveRecord {
	public $id_historico_transferencia;
	public $nombres_apellidos;
	
	public function getVoceroEmisor() {
		$vocero = '';
		if(isset($this->id_vocero_emisor)) {
			$model_vocero = Vocero::model()->findByPk($this->id_vocero_emisor);
                        $vocero = $model_vocero->nombres . ' '. $model_vocero->apellidos;
		}
  		return $vocero;
	}

	public function getVoceroReceptor() {
                $vocero = '';
                if(isset($this->id_vocero_receptor)) {
                        $model_vocero = Vocero::model()->findByPk($this->id_vocero_receptor);
                        $vocero = $model_vocero->nombres . ' '. $model_vocero->apellidos;
		}
                return $vocero;
        }

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'transferencia_vocero';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Transferencia entre Vocero|Transferencia entre Voceros', $n);
	}

	public static function representingColumn() {
		return 'referencia_bancaria';
	}

	public function rules() {
		return array(
			array('id_vocero_emisor, id_vocero_receptor, referencia_bancaria, id_banco, id_estado, fecha_creacion, id_jornada, monto_transferido, id_depositante', 'required'),
			array('id_vocero_emisor, referencia_bancaria, id_vocero_receptor, id_banco, id_estado, id_jornada, id_depositante', 'numerical', 'integerOnly'=>true),
			array('monto_transferido', 'numerical'),
			// array('referencia_bancaria', 'length', 'max'=>100),
			array('id, id_vocero_emisor, id_vocero_receptor, referencia_bancaria, id_banco, id_estado, fecha_creacion, id_jornada, monto_transferido, id_depositante', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idVoceroReceptor' => array(self::BELONGS_TO, 'Vocero', 'id_vocero_receptor'),
			'idVoceroEmisor' => array(self::BELONGS_TO, 'Vocero', 'id_vocero_emisor'),
			'idBanco' => array(self::BELONGS_TO, 'Bancos', 'id_banco'),
			'idEstado' => array(self::BELONGS_TO, 'Estados', 'id_estado'),
			'idJornada' => array(self::BELONGS_TO, 'Jornada', 'id_jornada'),
			'idDepositante' => array(self::BELONGS_TO, 'Depositante', 'id_depositante'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'id_vocero_emisor' => Yii::t('app', 'Vocero Emisor'),
			'id_vocero_receptor' => Yii::t('app', 'Vocero Receptor'),
			'referencia_bancaria' => Yii::t('app', 'Referencia Bancaria'),
			'id_banco' => null,
			'id_estado' => null,
			'fecha_creacion' => Yii::t('app', 'Fecha Creacion'),
			'id_jornada' => null,
			'monto_transferido' => Yii::t('app', 'Monto Transferido'),
			'id_depositante' => Yii::t('app', 'Titular de la cuenta'),
			'idVoceroReceptor' => Yii::t('app', 'Vocero Receptor'),
			'idVoceroEmisor' => Yii::t('app', 'Vocero Emisor'),
			'idBanco' => null,
			'idEstado' => null,
			'idJornada' => null,
			'idDepositante' => Yii::t('app', 'Titular de la cuenta'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('id_vocero_emisor', $this->id_vocero_emisor);
		$criteria->compare('id_vocero_receptor', $this->id_vocero_receptor);
		$criteria->compare('referencia_bancaria', $this->referencia_bancaria, true);
		$criteria->compare('id_banco', $this->id_banco);
		$criteria->compare('id_estado', $this->id_estado);
		$criteria->compare('fecha_creacion', $this->fecha_creacion, true);
		$criteria->compare('id_jornada', $this->id_jornada);
		$criteria->compare('monto_transferido', $this->monto_transferido);
		$criteria->compare('id_depositante', $this->id_depositante);
		$criteria->addCondition('j.estatus = true');
    $criteria->join = 'INNER JOIN jornada as j ON t.id_jornada = j.id';


		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
